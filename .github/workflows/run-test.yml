# This workflow does the following
#   - spins up an InfluxDB container
#   - creates a DB user and DB
#   - specifies a docket network name
#
#   - builds the fondskode image
#   - runs the fondskode container
#   - verifies a measurement has been stored in InfluxDB


name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Pull InfluxDB 1.8
        run:  sudo docker pull influxdb:1.8

      - name: create docker CI network
        run:  sudo docker network create -d bridge CI-NET

      - name: spin up InfluxDB
        run:  sudo docker run -d --network="CI-NET" --network-alias="CI-influxdb" -p 8086:8086 influxdb:1.8

      - name: check Influx is up
        run:  curl -sl -I http://localhost:8086/ping

      - name: create db user
        run:  curl "http://localhost:8086/query" --data-urlencode "q=CREATE USER CI_USER WITH PASSWORD 'thesecret' WITH ALL PRIVILEGES"

      - name: create database
        run:  curl -I -G -X GET http://localhost:8086/query -u CI_USER:thesecret  --data-urlencode "q=CREATE DATABASE CI_DB"

      - name: use test config file
        run:  cp test/python/config.json.test src/python/config.json

      - name: Build fondskode image
        run:  sudo docker build --tag pj/fondskode  src

      - name: run fondskode and get kurs
        run:  docker run --net="CI-NET" --rm  --name fondskode-getter pj/fondskode:latest

      - name: query DB
        run:  curl "http://localhost:8086/query" -u CI_USER:thesecret  --data-urlencode '"SELECT "value" FROM "fondskode"."autogen"."kurs"' 

