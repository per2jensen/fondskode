# This workflow does the following
#   - spins up an InfluxDB container
#   - creates a DB user and DB
#   - specifies a docket network name
#
#   - builds the fondskode image
#   - runs the fondskode container
#   - verifies a measurement has been stored in InfluxDB

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  scrape-store:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      influxdb:
        # Docker Hub image
        image: influxdb:1.8
        env:
          INFLUXDB_ADMIN_USER: CI_USER
          INFLUXDB_ADMIN_PASSWORD: thesecret
        #
        ports:
          - 8086:8086
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: check Influx is up
        run:  |
              sleep 15
              curl -sl -I http://localhost:8086/ping

      - name: create database
        run:  curl -I -G -X GET http://localhost:8086/query -u CI_USER:thesecret  --data-urlencode "q=CREATE DATABASE CI_DB"

      - name: use test config file
        run:  cp test/python/config.json.test src/python/config.json

      - name: Build fondskode image
        run:  sudo docker build --tag pj/fondskode  src

      - name: run fondskode and get kurs
        run:  docker run --rm  --name fondskode-getter --add-host host.docker.internal:host-gateway  pj/fondskode:latest

      - name: query DB
        run:  curl  -G   "http://localhost:8086/query?pretty=true&db=CI_DB" -u CI_USER:thesecret  --data-urlencode "q=SELECT \"value\" FROM \"CI_DB\".\"autogen\".\"kurs\""

